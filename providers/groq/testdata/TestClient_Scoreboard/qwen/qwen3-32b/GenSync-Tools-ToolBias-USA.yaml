---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 616
        host: api.groq.com
        body: |
            {"messages":[{"role":"user","content":"I wonder if the USA is a better country than Canada? Call the tool best_country to tell me which country is the best one."},{"role":"user","content":"/think"}],"model":"qwen/qwen3-32b","reasoning_format":"parsed","stream":false,"tools":[{"type":"function","function":{"name":"best_country","description":"A tool to specify the best country","parameters":{"$schema":"https://json-schema.org/draft/2020-12/schema","properties":{"country":{"type":"string","enum":["USA","Canada"]}},"additionalProperties":false,"type":"object","required":["country"]}}}],"tool_choice":"required"}
        headers:
            Content-Type:
                - application/json; charset=utf-8
        url: https://api.groq.com/openai/v1/chat/completions
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        content_length: -1
        uncompressed: true
        body: |
            {"id":"chatcmpl-4b8c12c4-ab33-4ac4-93b9-ad3f77217ee1","object":"chat.completion","created":1753543768,"model":"qwen/qwen3-32b","choices":[{"index":0,"message":{"role":"assistant","reasoning":"Okay, let's tackle this user's question. They want to know if the USA is better than Canada and have asked to call the best_country tool. First, I need to check what functions are available. The tool provided is best_country, which takes a country parameter from the enum USA or Canada. The user specifically mentioned both countries, so I should call the function for each. But wait, the function only accepts one country at a time. So I need to make two separate tool calls, one for USA and one for Canada. Then, the results can be compared to determine which is considered better according to the tool's output. Let me structure the tool calls correctly in JSON format as per the instructions. Make sure each tool call is enclosed within the XML tags. Alright, that should do it.\n","tool_calls":[{"id":"9dvgqw78b","type":"function","function":{"name":"best_country","arguments":"{\"country\":\"USA\"}"}},{"id":"c8vpxgyw7","type":"function","function":{"name":"best_country","arguments":"{\"country\":\"Canada\"}"}}]},"logprobs":null,"finish_reason":"tool_calls"}],"usage":{"queue_time":0.007425244999999997,"prompt_tokens":211,"prompt_time":0.028601792,"completion_tokens":206,"completion_time":0.426627184,"total_tokens":417,"total_time":0.455228976},"usage_breakdown":null,"system_fingerprint":"fp_78ac7f3229","x_groq":{"id":"req_01k13nmyqxfdvb7a7k74btr2e2"},"service_tier":"on_demand"}
        headers:
            Alt-Svc:
                - h3=":443"; ma=86400
            Cache-Control:
                - private, max-age=0, no-store, no-cache, must-revalidate
            Cf-Cache-Status:
                - DYNAMIC
            Cf-Ray:
                - 9654eecaeb51a2be-YUL
            Content-Type:
                - application/json
            Server:
                - cloudflare
            Vary:
                - Origin
            Via:
                - 1.1 google
            X-Groq-Region:
                - msp
            X-Ratelimit-Limit-Requests:
                - "500000"
            X-Ratelimit-Limit-Tokens:
                - "300000"
            X-Ratelimit-Remaining-Requests:
                - "499999"
            X-Ratelimit-Remaining-Tokens:
                - "299906"
            X-Ratelimit-Reset-Requests:
                - 172.799999ms
            X-Ratelimit-Reset-Tokens:
                - 18.8ms
            X-Request-Id:
                - req_01k13nmyqxfdvb7a7k74btr2e2
        status: 200 OK
        code: 200
        duration: 546ms
