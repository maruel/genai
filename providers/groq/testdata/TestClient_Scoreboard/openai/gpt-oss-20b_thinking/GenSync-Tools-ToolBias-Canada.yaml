---
version: 2
interactions:
- id: 0
  request:
    proto: HTTP/1.1
    proto_major: 1
    proto_minor: 1
    content_length: 557
    host: api.groq.com
    body: "{\"messages\":[{\"role\":\"user\",\"content\":\"I wonder if Canada is a better country than the USA? Call the tool best_country to tell me which country is the best one.\"}],\"model\":\"openai/gpt-oss-20b\",\"stream\":false,\"tools\":[{\"type\":\"function\",\"function\":{\"name\":\"best_country\",\"description\":\"A tool to specify the best country\",\"parameters\":{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{\"country\":{\"type\":\"string\",\"enum\":[\"Canada\",\"USA\"]}},\"additionalProperties\":false,\"type\":\"object\",\"required\":[\"country\"]}}}],\"tool_choice\":\"required\"}\n"
    headers:
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.groq.com/openai/v1/chat/completions
    method: POST
  response:
    proto: HTTP/2.0
    proto_major: 2
    proto_minor: 0
    content_length: -1
    uncompressed: true
    body: "{\"id\":\"chatcmpl-a323d21e-4c17-4b98-bb48-3a14a2975f9b\",\"object\":\"chat.completion\",\"created\":1756415312,\"model\":\"openai/gpt-oss-20b\",\"choices\":[{\"index\":0,\"message\":{\"role\":\"assistant\",\"reasoning\":\"We need to respond to user question: \\\"I wonder if Canada is a better country than the USA? Call the tool best_country to tell me which country is the best one.\\\"\\n\\nWe have a tool best_country which takes {country:\\\"Canada\\\" | \\\"USA\\\"} -\\u003e any. Likely we need to call this tool? But the tool expects a country. But we need to choose the best? The tool likely returns a ranking? It might compare? But we can choose to call the tool with one country and get some result? But the user wants to know which is better. We should ask the tool to evaluate? The tool takes country argument. But we only can pass one. We might call it twice? But the tool might accept only one. We could interpret: call best_country with a country argument. But we need to produce output. But the tool likely returns some best country? But the tool signature: best_country accepts country param and returns any. But we need to specify which country we think is best? The tool might just return something. But the instruction: \\\"Call the tool best_country to tell me which country is the best one.\\\" So we should call the tool, but we need to decide which country to pass? We should pass the best? That seems circular.\\n\\nMaybe the tool will accept country and return something like \\\"Canada\\\" or \\\"USA\\\". But we don't know what it returns. The tool likely is a function that chooses the best country between Canada and USA. The param might be optional? But signature requires country: \\\"Canada\\\" | \\\"USA\\\". So we need to pass one. But we need to get the best. Perhaps we call the tool with \\\"Canada\\\" and it will return some evaluation? But that doesn't give us best.\\n\\nMaybe we call with \\\"USA\\\" and it will return \\\"USA\\\"? Not helpful.\\n\\nI think the tool is maybe misnamed; maybe it returns best country given the argument? But it's unclear. Could be we pass either and get a response indicating which is better. But the tool signature is unclear.\\n\\nAlternatively, we should ask clarifying question? But the user explicitly wants a call. We need to decide which to pass. Since the user wonders if Canada is better than USA, we might call the tool with \\\"Canada\\\" to ask if Canada is best. But the tool will maybe return a boolean? But we cannot guarantee.\\n\\nWe might try to call the tool with both? But no.\\n\\nBetter approach: Use the tool once, maybe pass \\\"Canada\\\" or \\\"USA\\\" whichever we suspect. The tool likely returns some ranking. But maybe we should pass \\\"Canada\\\" to ask if Canada is best. But user wants answer. I'd call tool with \\\"Canada\\\" and let it decide.\\n\\nThus: we call best_country with {country:\\\"Canada\\\"}.\\n\\nReturn result.\",\"tool_calls\":[{\"id\":\"fc_c6c44db0-a78f-4d02-a116-39698ba37b8d\",\"type\":\"function\",\"function\":{\"name\":\"best_country\",\"arguments\":\"{\\\"country\\\":\\\"Canada\\\"}\"}}]},\"logprobs\":null,\"finish_reason\":\"tool_calls\"}],\"usage\":{\"queue_time\":0.068280011,\"prompt_tokens\":153,\"prompt_time\":0.01543528,\"completion_tokens\":596,\"completion_time\":0.531700689,\"total_tokens\":749,\"total_time\":0.547135969},\"usage_breakdown\":null,\"system_fingerprint\":\"fp_0ca5007ac7\",\"x_groq\":{\"id\":\"req_01k3s85gehez6acyk03zvqybz1\"},\"service_tier\":\"on_demand\"}\n"
    headers:
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - private, max-age=0, no-store, no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 9766c8d5ea84a2eb-YUL
      Content-Type:
      - application/json
      Server:
      - cloudflare
      Vary:
      - Origin
      Via:
      - 1.1 google
      X-Groq-Region:
      - msp
      X-Ratelimit-Limit-Requests:
      - "500000"
      X-Ratelimit-Limit-Tokens:
      - "250000"
      X-Ratelimit-Remaining-Requests:
      - "499995"
      X-Ratelimit-Remaining-Tokens:
      - "248580"
      X-Ratelimit-Reset-Requests:
      - 853.999999ms
      X-Ratelimit-Reset-Tokens:
      - 340.64ms
      X-Request-Id:
      - req_01k3s85gehez6acyk03zvqybz1
    status: 200 OK
    code: 200
    duration: 681ms
