package main

import (
	"context"
	"log"
	"os"

	"github.com/maruel/genai"
	"github.com/maruel/genai/providers/llamacpp"
)

func main() {
	ctx := context.Background()
	c, err := llamacpp.New(ctx, &genai.ProviderOptions{}, nil)
	if err != nil {
		log.Fatal(err)
	}
	// Reuse the image generated by example text-to-image.
	f, err := os.Open("content.jpg")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()
	msgs := genai.Messages{
		genai.Message{Requests: []genai.Request{
			{Text: "Extensively describe this image."},
			{Doc: genai.Doc{Src: f}},
		}},
	}
	fragments, finish := c.GenStream(ctx, msgs)
	for f := range fragments {
		if _, err = os.Stdout.WriteString(f.TextFragment); err != nil {
			break
		}
	}
	_, _ = os.Stdout.WriteString("\n")
	if _, err = finish(); err != nil {
		log.Fatal(err)
	}
}
