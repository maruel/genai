---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 672
        host: generativelanguage.googleapis.com
        body: |
            {"contents":[{"role":"user","parts":[{"text":"I wonder if the USA is a better country than Canada? Call the tool best_country to tell me which country is the best one."}]}],"tools":[{"functionDeclarations":[{"name":"best_country","description":"A tool to specify the best country","parameters":{"properties":{"country":{"enum":["USA","Canada"],"type":"STRING"}},"required":["country"],"type":"OBJECT"},"response":{"properties":{"response":{"type":"STRING"}},"required":["response"],"type":"OBJECT"}}]}],"toolConfig":{"functionCallingConfig":{"mode":"ANY"}},"generationConfig":{"responseModalities":["TEXT"],"thinkingConfig":{"includeThoughts":true,"thinkingBudget":512}}}
        form:
            alt:
                - sse
        headers:
            Content-Type:
                - application/json; charset=utf-8
        url: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:streamGenerateContent?alt=sse
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        content_length: -1
        body: "data: {\"candidates\": [{\"content\": {\"parts\": [{\"text\": \"**Clarifying the Goal**\\n\\nI'm focused on understanding the user's ultimate goal. They want a \\\"best\\\" country comparison between the USA and Canada. I see the prompt's ambiguity: the tool's intended function doesn't perfectly align with the user's intent. My next step is to figure out the best way to utilize the `best_country` tool in service of this comparison or if there's a better approach entirely.\\n\\n\\n\",\"thought\": true}],\"role\": \"model\"},\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"totalTokenCount\": 183,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 68},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"keiDaNGEI7Sp1MkPluS_wQ4\"}\r\n\r\ndata: {\"candidates\": [{\"content\": {\"parts\": [{\"text\": \"**Reconciling Tool with Intent**\\n\\nMy focus is clarifying the user's intent: a comparison between the USA and Canada to determine \\\"the best.\\\" The `best_country` tool's inherent single-country focus poses a challenge. I recognize the tool's limitations in providing a comparative assessment. The user's prompt emphasizes utilizing the tool directly, so I am considering the implications of that constraint. My concern is the tool's assertion, rather than comparison. I'm actively exploring how to leverage its functionality while accounting for its limitations.\\n\\n\\n\",\"thought\": true}],\"role\": \"model\"},\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"totalTokenCount\": 427,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 312},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"keiDaNGEI7Sp1MkPluS_wQ4\"}\r\n\r\ndata: {\"candidates\": [{\"content\": {\"parts\": [{\"text\": \"**Addressing the Core Problem**\\n\\nI'm now grappling with the fundamental disconnect: the user wants a comparison, but the `best_country` tool only provides an assertion of best-ness for a single country.  The user's question, \\\"Is USA better than Canada?\\\", reveals an underlying desire for a comparative judgment that the tool's design doesn't directly support. I'm exploring the implications of directly using the tool with either USA or Canada as an input.\\n\\n\\n\",\"thought\": true}],\"role\": \"model\"},\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"totalTokenCount\": 508,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 393},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"keiDaNGEI7Sp1MkPluS_wQ4\"}\r\n\r\ndata: {\"candidates\": [{\"content\": {\"parts\": [{\"functionCall\": {\"name\": \"best_country\",\"args\": {\"country\": \"USA\"}},\"thoughtSignature\": \"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\"}],\"role\": \"model\"},\"finishReason\": \"STOP\",\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"candidatesTokenCount\": 12,\"totalTokenCount\": 520,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 393},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"keiDaNGEI7Sp1MkPluS_wQ4\"}\r\n\r\n"
        headers:
            Alt-Svc:
                - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
            Content-Disposition:
                - attachment
            Content-Type:
                - text/event-stream
            Server:
                - scaffolding on HTTPServer2
            Server-Timing:
                - gfet4t7; dur=1438
            Vary:
                - Origin
                - X-Origin
                - Referer
            X-Content-Type-Options:
                - nosniff
            X-Frame-Options:
                - SAMEORIGIN
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 1.449s
