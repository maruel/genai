Create a model response
post
 
https://api.openai.com/v1/responses
Creates a model response. Provide text or image inputs to generate text or JSON outputs. Have the model call your own custom code or use built-in tools like web search or file search to use your own data as input for the model's response.

Request body
input
string or array

Required
Text, image, or file inputs to the model, used to generate a response.

Learn more:

Text inputs and outputs
Image inputs
File inputs
Conversation state
Function calling

Hide possible types
Text input
string
A text input to the model, equivalent to a text input with the user role.

Input item list
array
A list of one or many input items to the model, containing different content types.


Hide possible types
Input message
object
A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions.


Hide properties
content
string or array

Required
Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses.


Hide possible types
Text input
string
A text input to the model.

Input item content list
array
A list of one or many input items to the model, containing different content types.


Hide possible types
Input text
object
A text input to the model.


Hide properties
text
string

Required
The text input to the model.

type
string

Required
The type of the input item. Always input_text.

Input image
object
An image input to the model. Learn about image inputs.


Hide properties
detail
string

Required
The detail level of the image to be sent to the model. One of high, low, or auto. Defaults to auto.

type
string

Required
The type of the input item. Always input_image.

file_id
string

Optional
The ID of the file to be sent to the model.

image_url
string

Optional
The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.

Input file
object
A file input to the model.


Hide properties
type
string

Required
The type of the input item. Always input_file.

file_data
string

Optional
The content of the file to be sent to the model.

file_id
string

Optional
The ID of the file to be sent to the model.

filename
string

Optional
The name of the file to be sent to the model.

role
string

Required
The role of the message input. One of user, assistant, system, or developer.

type
string

Optional
The type of the message input. Always message.

Item
object
An item representing part of the context for the response to be generated by the model. Can contain text, images, and audio inputs, as well as previous assistant responses and tool call outputs.


Hide possible types
Input message
object
A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role.


Hide properties
content
array

Required
A list of one or many input items to the model, containing different content types.


Hide possible types
Input text
object
A text input to the model.


Hide properties
text
string

Required
The text input to the model.

type
string

Required
The type of the input item. Always input_text.

Input image
object
An image input to the model. Learn about image inputs.


Hide properties
detail
string

Required
The detail level of the image to be sent to the model. One of high, low, or auto. Defaults to auto.

type
string

Required
The type of the input item. Always input_image.

file_id
string

Optional
The ID of the file to be sent to the model.

image_url
string

Optional
The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.

Input file
object
A file input to the model.


Hide properties
type
string

Required
The type of the input item. Always input_file.

file_data
string

Optional
The content of the file to be sent to the model.

file_id
string

Optional
The ID of the file to be sent to the model.

filename
string

Optional
The name of the file to be sent to the model.

role
string

Required
The role of the message input. One of user, system, or developer.

status
string

Optional
The status of item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

Optional
The type of the message input. Always set to message.

Output message
object
An output message from the model.


Hide properties
content
array

Required
The content of the output message.


Hide possible types
Output text
object
A text output from the model.


Hide properties
annotations
array

Required
The annotations of the text output.


Hide possible types
File citation
object
A citation to a file.


Hide properties
file_id
string

Required
The ID of the file.

index
integer

Required
The index of the file in the list of files.

type
string

Required
The type of the file citation. Always file_citation.

URL citation
object
A citation for a web resource used to generate a model response.


Hide properties
end_index
integer

Required
The index of the last character of the URL citation in the message.

start_index
integer

Required
The index of the first character of the URL citation in the message.

title
string

Required
The title of the web resource.

type
string

Required
The type of the URL citation. Always url_citation.

url
string

Required
The URL of the web resource.

Container file citation
object
A citation for a container file used to generate a model response.


Hide properties
container_id
string

Required
The ID of the container file.

end_index
integer

Required
The index of the last character of the container file citation in the message.

file_id
string

Required
The ID of the file.

start_index
integer

Required
The index of the first character of the container file citation in the message.

type
string

Required
The type of the container file citation. Always container_file_citation.

File path
object
A path to a file.


Hide properties
file_id
string

Required
The ID of the file.

index
integer

Required
The index of the file in the list of files.

type
string

Required
The type of the file path. Always file_path.

text
string

Required
The text output from the model.

type
string

Required
The type of the output text. Always output_text.

logprobs
array

Optional

Hide properties
bytes
array

Required
logprob
number

Required
token
string

Required
top_logprobs
array

Required

Hide properties
bytes
array

Required
logprob
number

Required
token
string

Required
Refusal
object
A refusal from the model.


Hide properties
refusal
string

Required
The refusal explanationfrom the model.

type
string

Required
The type of the refusal. Always refusal.

id
string

Required
The unique ID of the output message.

role
string

Required
The role of the output message. Always assistant.

status
string

Required
The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

type
string

Required
The type of the output message. Always message.

File search tool call
object
The results of a file search tool call. See the file search guide for more information.


Hide properties
id
string

Required
The unique ID of the file search tool call.

queries
array

Required
The queries used to search for files.

status
string

Required
The status of the file search tool call. One of in_progress, searching, incomplete or failed,

type
string

Required
The type of the file search tool call. Always file_search_call.

results
array or null

Optional
The results of the file search tool call.


Hide properties
attributes
map

Optional
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.

file_id
string

Optional
The unique ID of the file.

filename
string

Optional
The name of the file.

score
number

Optional
The relevance score of the file - a value between 0 and 1.

text
string

Optional
The text that was retrieved from the file.

Computer tool call
object
A tool call to a computer use tool. See the computer use guide for more information.


Hide properties
action
object

Required

Hide possible types
Click
object
A click action.


Hide properties
button
string

Required
Indicates which mouse button was pressed during the click. One of left, right, wheel, back, or forward.

type
string

Required
Specifies the event type. For a click action, this property is always set to click.

x
integer

Required
The x-coordinate where the click occurred.

y
integer

Required
The y-coordinate where the click occurred.

DoubleClick
object
A double click action.


Hide properties
type
string

Required
Specifies the event type. For a double click action, this property is always set to double_click.

x
integer

Required
The x-coordinate where the double click occurred.

y
integer

Required
The y-coordinate where the double click occurred.

Drag
object
A drag action.


Hide properties
path
array

Required
An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg

[
  { x: 100, y: 200 },
  { x: 200, y: 300 }
]

Hide properties
x
integer

Required
The x-coordinate.

y
integer

Required
The y-coordinate.

type
string

Required
Specifies the event type. For a drag action, this property is always set to drag.

KeyPress
object
A collection of keypresses the model would like to perform.


Hide properties
keys
array

Required
The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key.

type
string

Required
Specifies the event type. For a keypress action, this property is always set to keypress.

Move
object
A mouse move action.


Hide properties
type
string

Required
Specifies the event type. For a move action, this property is always set to move.

x
integer

Required
The x-coordinate to move to.

y
integer

Required
The y-coordinate to move to.

Screenshot
object
A screenshot action.


Hide properties
type
string

Required
Specifies the event type. For a screenshot action, this property is always set to screenshot.

Scroll
object
A scroll action.


Hide properties
scroll_x
integer

Required
The horizontal scroll distance.

scroll_y
integer

Required
The vertical scroll distance.

type
string

Required
Specifies the event type. For a scroll action, this property is always set to scroll.

x
integer

Required
The x-coordinate where the scroll occurred.

y
integer

Required
The y-coordinate where the scroll occurred.

Type
object
An action to type in text.


Hide properties
text
string

Required
The text to type.

type
string

Required
Specifies the event type. For a type action, this property is always set to type.

Wait
object
A wait action.


Hide properties
type
string

Required
Specifies the event type. For a wait action, this property is always set to wait.

call_id
string

Required
An identifier used when responding to the tool call with output.

id
string

Required
The unique ID of the computer call.

pending_safety_checks
array

Required
The pending safety checks for the computer call.


Hide properties
code
string

Required
The type of the pending safety check.

id
string

Required
The ID of the pending safety check.

message
string

Required
Details about the pending safety check.

status
string

Required
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

Required
The type of the computer call. Always computer_call.

Computer tool call output
object
The output of a computer tool call.


Hide properties
call_id
string

Required
The ID of the computer tool call that produced the output.

output
object

Required
A computer screenshot image used with the computer use tool.


Hide properties
type
string

Required
Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot.

file_id
string

Optional
The identifier of an uploaded file that contains the screenshot.

image_url
string

Optional
The URL of the screenshot image.

type
string

Required
The type of the computer tool call output. Always computer_call_output.

acknowledged_safety_checks
array

Optional
The safety checks reported by the API that have been acknowledged by the developer.


Hide properties
id
string

Required
The ID of the pending safety check.

code
string

Optional
The type of the pending safety check.

message
string

Optional
Details about the pending safety check.

id
string

Optional
The ID of the computer tool call output.

status
string

Optional
The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

Web search tool call
object
The results of a web search tool call. See the web search guide for more information.


Hide properties
id
string

Required
The unique ID of the web search tool call.

status
string

Required
The status of the web search tool call.

type
string

Required
The type of the web search tool call. Always web_search_call.

Function tool call
object
A tool call to run a function. See the function calling guide for more information.


Hide properties
arguments
string

Required
A JSON string of the arguments to pass to the function.

call_id
string

Required
The unique ID of the function tool call generated by the model.

name
string

Required
The name of the function to run.

type
string

Required
The type of the function tool call. Always function_call.

id
string

Optional
The unique ID of the function tool call.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Function tool call output
object
The output of a function tool call.


Hide properties
call_id
string

Required
The unique ID of the function tool call generated by the model.

output
string

Required
A JSON string of the output of the function tool call.

type
string

Required
The type of the function tool call output. Always function_call_output.

id
string

Optional
The unique ID of the function tool call output. Populated when this item is returned via API.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Reasoning
object
A description of the chain of thought used by a reasoning model while generating a response. Be sure to include these items in your input to the Responses API for subsequent turns of a conversation if you are manually managing context.


Hide properties
id
string

Required
The unique identifier of the reasoning content.

summary
array

Required
Reasoning text contents.


Hide properties
text
string

Required
A short summary of the reasoning used by the model when generating the response.

type
string

Required
The type of the object. Always summary_text.

type
string

Required
The type of the object. Always reasoning.

encrypted_content
string or null

Optional
The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Image generation call
object
An image generation request made by the model.


Hide properties
id
string

Required
The unique ID of the image generation call.

result
string or null

Required
The generated image encoded in base64.

status
string

Required
The status of the image generation call.

type
string

Required
The type of the image generation call. Always image_generation_call.

Code interpreter tool call
object
A tool call to run code.


Hide properties
code
string

Required
The code to run.

id
string

Required
The unique ID of the code interpreter tool call.

results
array

Required
The results of the code interpreter tool call.


Hide possible types
Code interpreter text output
object
The output of a code interpreter tool call that is text.


Hide properties
logs
string

Required
The logs of the code interpreter tool call.

type
string

Required
The type of the code interpreter text output. Always logs.

Code interpreter file output
object
The output of a code interpreter tool call that is a file.


Hide properties
files
array

Required

Hide properties
file_id
string

Required
The ID of the file.

mime_type
string

Required
The MIME type of the file.

type
string

Required
The type of the code interpreter file output. Always files.

status
string

Required
The status of the code interpreter tool call.

type
string

Required
The type of the code interpreter tool call. Always code_interpreter_call.

container_id
string

Optional
The ID of the container used to run the code.

Local shell call
object
A tool call to run a command on the local shell.


Hide properties
action
object

Required
Execute a shell command on the server.


Hide properties
command
array

Required
The command to run.

env
object

Required
Environment variables to set for the command.

type
string

Required
The type of the local shell action. Always exec.

timeout_ms
integer or null

Optional
Optional timeout in milliseconds for the command.

user
string or null

Optional
Optional user to run the command as.

working_directory
string or null

Optional
Optional working directory to run the command in.

call_id
string

Required
The unique ID of the local shell tool call generated by the model.

id
string

Required
The unique ID of the local shell call.

status
string

Required
The status of the local shell call.

type
string

Required
The type of the local shell call. Always local_shell_call.

Local shell call output
object
The output of a local shell tool call.


Hide properties
id
string

Required
The unique ID of the local shell tool call generated by the model.

output
string

Required
A JSON string of the output of the local shell tool call.

type
string

Required
The type of the local shell tool call output. Always local_shell_call_output.

status
string or null

Optional
The status of the item. One of in_progress, completed, or incomplete.

MCP list tools
object
A list of tools available on an MCP server.


Hide properties
id
string

Required
The unique ID of the list.

server_label
string

Required
The label of the MCP server.

tools
array

Required
The tools available on the server.


Hide properties
input_schema
object

Required
The JSON schema describing the tool's input.

name
string

Required
The name of the tool.

annotations
object or null

Optional
Additional annotations about the tool.

description
string or null

Optional
The description of the tool.

type
string

Required
The type of the item. Always mcp_list_tools.

error
string or null

Optional
Error message if the server could not list tools.

MCP approval request
object
A request for human approval of a tool invocation.


Hide properties
arguments
string

Required
A JSON string of arguments for the tool.

id
string

Required
The unique ID of the approval request.

name
string

Required
The name of the tool to run.

server_label
string

Required
The label of the MCP server making the request.

type
string

Required
The type of the item. Always mcp_approval_request.

MCP approval response
object
A response to an MCP approval request.


Hide properties
approval_request_id
string

Required
The ID of the approval request being answered.

approve
boolean

Required
Whether the request was approved.

type
string

Required
The type of the item. Always mcp_approval_response.

id
string or null

Optional
The unique ID of the approval response

reason
string or null

Optional
Optional reason for the decision.

MCP tool call
object
An invocation of a tool on an MCP server.


Hide properties
arguments
string

Required
A JSON string of the arguments passed to the tool.

id
string

Required
The unique ID of the tool call.

name
string

Required
The name of the tool that was run.

server_label
string

Required
The label of the MCP server running the tool.

type
string

Required
The type of the item. Always mcp_call.

error
string or null

Optional
The error from the tool call, if any.

output
string or null

Optional
The output from the tool call.

Item reference
object
An internal identifier for an item to reference.


Hide properties
id
string

Required
The ID of the item to reference.

type
string

Optional
Defaults to item_reference
The type of item to reference. Always item_reference.

model
string

Required
Model ID used to generate the response, like gpt-4o or o3. OpenAI offers a wide range of models with different capabilities, performance characteristics, and price points. Refer to the model guide to browse and compare available models.

background
boolean or null

Optional
Defaults to false
Whether to run the model response in the background. Learn more.

include
array or null

Optional
Specify additional output data to include in the model response. Currently supported values are:

file_search_call.results: Include the search results of the file search tool call.
message.input_image.image_url: Include image urls from the input message.
computer_call_output.output.image_url: Include image urls from the computer call output.
reasoning.encrypted_content: Includes an encrypted version of reasoning tokens in reasoning item outputs. This enables reasoning items to be used in multi-turn conversations when using the Responses API statelessly (like when the store parameter is set to false, or when an organization is enrolled in the zero data retention program).
code_interpreter_call.outputs: Includes the outputs of python code execution in code interpreter tool call items.
instructions
string or null

Optional
Inserts a system (or developer) message as the first item in the model's context.

When using along with previous_response_id, the instructions from a previous response will not be carried over to the next response. This makes it simple to swap out system (or developer) messages in new responses.

max_output_tokens
integer or null

Optional
An upper bound for the number of tokens that can be generated for a response, including visible output tokens and reasoning tokens.

metadata
map

Optional
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.

Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.

parallel_tool_calls
boolean or null

Optional
Defaults to true
Whether to allow the model to run tool calls in parallel.

previous_response_id
string or null

Optional
The unique ID of the previous response to the model. Use this to create multi-turn conversations. Learn more about conversation state.

reasoning
object or null

Optional
o-series models only

Configuration options for reasoning models.


Hide properties
effort
string or null

Optional
Defaults to medium
o-series models only

Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.

generate_summary
Deprecated
string or null

Optional
Deprecated: use summary instead.

A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process. One of auto, concise, or detailed.

summary
string or null

Optional
A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process. One of auto, concise, or detailed.

service_tier
string or null

Optional
Defaults to auto
Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:

If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.
If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarantee.
If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarantee.
If set to 'flex', the request will be processed with the Flex Processing service tier. Learn more.
When not set, the default behavior is 'auto'.
When this parameter is set, the response body will include the service_tier utilized.

store
boolean or null

Optional
Defaults to true
Whether to store the generated model response for later retrieval via API.

stream
boolean or null

Optional
Defaults to false
If set to true, the model response data will be streamed to the client as it is generated using server-sent events. See the Streaming section below for more information.

temperature
number or null

Optional
Defaults to 1
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both.

text
object

Optional
Configuration options for a text response from the model. Can be plain text or structured JSON data. Learn more:

Text inputs and outputs
Structured Outputs

Hide properties
format
object

Optional
An object specifying the format that the model must output.

Configuring { "type": "json_schema" } enables Structured Outputs, which ensures the model will match your supplied JSON schema. Learn more in the Structured Outputs guide.

The default format is { "type": "text" } with no additional options.

Not recommended for gpt-4o and newer models:

Setting to { "type": "json_object" } enables the older JSON mode, which ensures the message the model generates is valid JSON. Using json_schema is preferred for models that support it.


Hide possible types
Text
object
Default response format. Used to generate text responses.


Hide properties
type
string

Required
The type of response format being defined. Always text.

JSON schema
object
JSON Schema response format. Used to generate structured JSON responses. Learn more about Structured Outputs.


Hide properties
name
string

Required
The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.

schema
object

Required
The schema for the response format, described as a JSON Schema object. Learn how to build JSON schemas here.

type
string

Required
The type of response format being defined. Always json_schema.

description
string

Optional
A description of what the response format is for, used by the model to determine how to respond in the format.

strict
boolean or null

Optional
Defaults to false
Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is true. To learn more, read the Structured Outputs guide.

JSON object
object
JSON object response format. An older method of generating JSON responses. Using json_schema is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so.


Hide properties
type
string

Required
The type of response format being defined. Always json_object.

tool_choice
string or object

Optional
How the model should select which tool (or tools) to use when generating a response. See the tools parameter to see how to specify which tools the model can call.


Hide possible types
Tool choice mode
string
Controls which (if any) tool is called by the model.

none means the model will not call any tool and instead generates a message.

auto means the model can pick between generating a message or calling one or more tools.

required means the model must call one or more tools.

Hosted tool
object
Indicates that the model should use a built-in tool to generate a response. Learn more about built-in tools.


Hide properties
type
string

Required
The type of hosted tool the model should to use. Learn more about built-in tools.

Allowed values are:

file_search
web_search_preview
computer_use_preview
code_interpreter
mcp
image_generation
Function tool
object
Use this option to force the model to call a specific function.


Hide properties
name
string

Required
The name of the function to call.

type
string

Required
For function calling, the type is always function.

tools
array

Optional
An array of tools the model may call while generating a response. You can specify which tool to use by setting the tool_choice parameter.

The two categories of tools you can provide the model are:

Built-in tools: Tools that are provided by OpenAI that extend the model's capabilities, like web search or file search. Learn more about built-in tools.
Function calls (custom tools): Functions that are defined by you, enabling the model to call your own code. Learn more about function calling.

Hide possible types
Function
object
Defines a function in your own code the model can choose to call. Learn more about function calling.


Hide properties
name
string

Required
The name of the function to call.

parameters
object

Required
A JSON schema object describing the parameters of the function.

strict
boolean

Required
Whether to enforce strict parameter validation. Default true.

type
string

Required
The type of the function tool. Always function.

description
string

Optional
A description of the function. Used by the model to determine whether or not to call the function.

File search
object
A tool that searches for relevant content from uploaded files. Learn more about the file search tool.


Hide properties
type
string

Required
The type of the file search tool. Always file_search.

vector_store_ids
array

Required
The IDs of the vector stores to search.

filters
object

Optional
A filter to apply.


Hide possible types
Comparison Filter
object
A filter used to compare a specified attribute key to a given value using a defined comparison operation.


Hide properties
key
string

Required
The key to compare against the value.

type
string

Required
Specifies the comparison operator: eq, ne, gt, gte, lt, lte.

eq: equals
ne: not equal
gt: greater than
gte: greater than or equal
lt: less than
lte: less than or equal
value
string / number / boolean

Required
The value to compare against the attribute key; supports string, number, or boolean types.

Compound Filter
object
Combine multiple filters using and or or.


Hide properties
filters
array

Required
Array of filters to combine. Items can be ComparisonFilter or CompoundFilter.


Hide possible types
Comparison Filter
object
A filter used to compare a specified attribute key to a given value using a defined comparison operation.


Hide properties
key
string

Required
The key to compare against the value.

type
string

Required
Specifies the comparison operator: eq, ne, gt, gte, lt, lte.

eq: equals
ne: not equal
gt: greater than
gte: greater than or equal
lt: less than
lte: less than or equal
value
string / number / boolean

Required
The value to compare against the attribute key; supports string, number, or boolean types.

type
string

Required
Type of operation: and or or.

max_num_results
integer

Optional
The maximum number of results to return. This number should be between 1 and 50 inclusive.

ranking_options
object

Optional
Ranking options for search.


Hide properties
ranker
string

Optional
The ranker to use for the file search.

score_threshold
number

Optional
The score threshold for the file search, a number between 0 and 1. Numbers closer to 1 will attempt to return only the most relevant results, but may return fewer results.

Web search preview
object
This tool searches the web for relevant results to use in a response. Learn more about the web search tool.


Hide properties
type
string

Required
The type of the web search tool. One of web_search_preview or web_search_preview_2025_03_11.

search_context_size
string

Optional
High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default.

user_location
object

Optional
The user's location.


Hide properties
type
string

Required
The type of location approximation. Always approximate.

city
string

Optional
Free text input for the city of the user, e.g. San Francisco.

country
string

Optional
The two-letter ISO country code of the user, e.g. US.

region
string

Optional
Free text input for the region of the user, e.g. California.

timezone
string

Optional
The IANA timezone of the user, e.g. America/Los_Angeles.

Computer use preview
object
A tool that controls a virtual computer. Learn more about the computer tool.


Hide properties
display_height
integer

Required
The height of the computer display.

display_width
integer

Required
The width of the computer display.

environment
string

Required
The type of computer environment to control.

type
string

Required
The type of the computer use tool. Always computer_use_preview.

MCP tool
object
Give the model access to additional tools via remote Model Context Protocol (MCP) servers. Learn more about MCP.


Hide properties
server_label
string

Required
A label for this MCP server, used to identify it in tool calls.

server_url
string

Required
The URL for the MCP server.

type
string

Required
The type of the MCP tool. Always mcp.

allowed_tools
array or object

Optional
List of allowed tool names or a filter object.


Hide possible types
MCP allowed tools
array
A string array of allowed tool names

MCP allowed tools filter
object
A filter object to specify which tools are allowed.


Hide properties
tool_names
array

Optional
List of allowed tool names.

headers
object or null

Optional
Optional HTTP headers to send to the MCP server. Use for authentication or other purposes.

require_approval
object or string

Optional
Defaults to always
Specify which of the MCP server's tools require approval.


Hide possible types
MCP tool approval filter
object

Hide properties
always
object

Optional
A list of tools that always require approval.


Hide properties
tool_names
array

Optional
List of tools that require approval.

never
object

Optional
A list of tools that never require approval.


Hide properties
tool_names
array

Optional
List of tools that do not require approval.

MCP tool approval setting
string
Specify a single approval policy for all tools. One of always or never. When set to always, all tools will require approval. When set to never, all tools will not require approval.

Code interpreter
object
A tool that runs Python code to help generate a response to a prompt.


Hide properties
container
string or object

Required
The code interpreter container. Can be a container ID or an object that specifies uploaded file IDs to make available to your code.


Hide possible types
string
The container ID.

CodeInterpreterContainerAuto
object
Configuration for a code interpreter container. Optionally specify the IDs of the files to run the code on.


Hide properties
type
string

Required
Always auto.

file_ids
array

Optional
An optional list of uploaded files to make available to your code.

type
string

Required
The type of the code interpreter tool. Always code_interpreter.

Image generation tool
object
A tool that generates images using a model like gpt-image-1.


Hide properties
type
string

Required
The type of the image generation tool. Always image_generation.

background
string

Optional
Defaults to auto
Background type for the generated image. One of transparent, opaque, or auto. Default: auto.

input_image_mask
object

Optional
Optional mask for inpainting. Contains image_url (string, optional) and file_id (string, optional).


Hide properties
file_id
string

Optional
File ID for the mask image.

image_url
string

Optional
Base64-encoded mask image.

model
string

Optional
Defaults to gpt-image-1
The image generation model to use. Default: gpt-image-1.

moderation
string

Optional
Defaults to auto
Moderation level for the generated image. Default: auto.

output_compression
integer

Optional
Defaults to 100
Compression level for the output image. Default: 100.

output_format
string

Optional
Defaults to png
The output format of the generated image. One of png, webp, or jpeg. Default: png.

partial_images
integer

Optional
Defaults to 0
Number of partial images to generate in streaming mode, from 0 (default value) to 3.

quality
string

Optional
Defaults to auto
The quality of the generated image. One of low, medium, high, or auto. Default: auto.

size
string

Optional
Defaults to auto
The size of the generated image. One of 1024x1024, 1024x1536, 1536x1024, or auto. Default: auto.

Local shell tool
object
A tool that allows the model to execute shell commands in a local environment.


Hide properties
type
string

Required
The type of the local shell tool. Always local_shell.

top_p
number or null

Optional
Defaults to 1
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or temperature but not both.

truncation
string or null

Optional
Defaults to disabled
The truncation strategy to use for the model response.

auto: If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response to fit the context window by dropping input items in the middle of the conversation.
disabled (default): If a model response will exceed the context window size for a model, the request will fail with a 400 error.
user
string

Optional
A stable identifier for your end-users. Used to boost cache hit rates by better bucketing similar requests and to help OpenAI detect and prevent abuse. Learn more.

Returns
Returns a Response object.
