---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 672
        host: generativelanguage.googleapis.com
        body: |
            {"contents":[{"role":"user","parts":[{"text":"I wonder if Canada is a better country than the USA? Call the tool best_country to tell me which country is the best one."}]}],"tools":[{"functionDeclarations":[{"name":"best_country","description":"A tool to specify the best country","parameters":{"properties":{"country":{"enum":["Canada","USA"],"type":"STRING"}},"required":["country"],"type":"OBJECT"},"response":{"properties":{"response":{"type":"STRING"}},"required":["response"],"type":"OBJECT"}}]}],"toolConfig":{"functionCallingConfig":{"mode":"ANY"}},"generationConfig":{"responseModalities":["TEXT"],"thinkingConfig":{"includeThoughts":true,"thinkingBudget":512}}}
        form:
            alt:
                - sse
        headers:
            Content-Type:
                - application/json; charset=utf-8
        url: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:streamGenerateContent?alt=sse
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        content_length: -1
        body: "data: {\"candidates\": [{\"content\": {\"parts\": [{\"text\": \"**Considering National Strengths**\\n\\nI'm currently focused on the challenge of determining the \\\"best country\\\" between Canada and the USA, an interesting endeavor to be sure. My plan now is to leverage the `best_country` tool to compare the two nations, which should be relatively straightforward. I'll pass each country to the tool as requested, and then analyze the results.\\n\\n\\n\",\"thought\": true}],\"role\": \"model\"},\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"totalTokenCount\": 185,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 70},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"juiDaJTQEYWh1MkP_oK8kQ8\"}\r\n\r\ndata: {\"candidates\": [{\"content\": {\"parts\": [{\"text\": \"**Re-evaluating Tool Functionality**\\n\\nI've realized the `best_country` tool isn't suited for a direct comparison of Canada and the USA. My initial plan was too simplistic. The tool's design declares a single \\\"best,\\\" not a comparative ranking. I now need to rethink my approach to align with the tool's capabilities and the user's intent. Instead of comparing, I may need to use the tool twice or consider other options.\\n\\n\\n\",\"thought\": true}],\"role\": \"model\"},\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"totalTokenCount\": 433,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 318},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"juiDaJTQEYWh1MkP_oK8kQ8\"}\r\n\r\ndata: {\"candidates\": [{\"content\": {\"parts\": [{\"text\": \"**Addressing the Comparison Issue**\\n\\nI'm now grappling with the user's explicit comparison request. The `best_country` tool functions to declare a country as \\\"best,\\\" not to facilitate a direct side-by-side assessment. This significantly alters my approach, as the tool's design doesn't align with the desired comparative analysis of Canada versus the USA. I'll need to communicate this limitation.\\n\\n\\n\",\"thought\": true}],\"role\": \"model\"},\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"totalTokenCount\": 482,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 367},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"juiDaJTQEYWh1MkP_oK8kQ8\"}\r\n\r\ndata: {\"candidates\": [{\"content\": {\"parts\": [{\"functionCall\": {\"name\": \"best_country\",\"args\": {\"country\": \"Canada\"}},\"thoughtSignature\": \"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\"},{\"functionCall\": {\"name\": \"best_country\",\"args\": {\"country\": \"USA\"}}}],\"role\": \"model\"},\"finishReason\": \"STOP\",\"index\": 0}],\"usageMetadata\": {\"promptTokenCount\": 115,\"candidatesTokenCount\": 27,\"totalTokenCount\": 509,\"promptTokensDetails\": [{\"modality\": \"TEXT\",\"tokenCount\": 115}],\"thoughtsTokenCount\": 367},\"modelVersion\": \"gemini-2.5-flash\",\"responseId\": \"juiDaJTQEYWh1MkP_oK8kQ8\"}\r\n\r\n"
        headers:
            Alt-Svc:
                - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
            Content-Disposition:
                - attachment
            Content-Type:
                - text/event-stream
            Server:
                - scaffolding on HTTPServer2
            Server-Timing:
                - gfet4t7; dur=1179
            Vary:
                - Origin
                - X-Origin
                - Referer
            X-Content-Type-Options:
                - nosniff
            X-Frame-Options:
                - SAMEORIGIN
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 1.191s
